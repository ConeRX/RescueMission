// Küche (Kevins Haus)

/****************************
*   Variablen
****************************/

bool milch = false; // Ist nötig, da die Milchpackung aus den Inventory verschwindet, sobald man sie ins Glas schüttet.

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oMikrowelle.Clickable = false;
	oWasser.Clickable = false;

	Door[eDoorNumKueche].Init(oTuer, hTuer);
	Door[eDoorNumWasser2].Init(oWasser, hWasserhahn);
  
  if (oWasser.Visible) PlayAmbientSound(1, 95, 150, 260, 130);
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumKueche].Click() == 0 ) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/
function hSchrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Schränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kann den Schrank nicht rausreißen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if (player.ActiveInventory == iGlas)
      {
        player.Say("Das ist nicht der korrekte Schrank für das Glas.");
      } else player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function hMikrowelle_AnyClick()
{
	if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle. Standard-Modell.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wozu? Die Mikrowelle ist leer!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      if (!oMikrowelle.Visible)
      {
        aSound85.Play();
        oMikrowelle.Visible = true;
      } else player.Say("Die ist schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      if (oMikrowelle.Visible)
      {
        Wait(5);
        aSound83.Play();
        oMikrowelle.Visible = false;
      } else player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das möchte ich nicht aufwärmen.");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich muss mir demnächst mal einen mit Gefrierfach kaufen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich war froh als er endlich hier stand. Der kommt mir erst weg, wenn ich einen neuen kaufe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da steht: \"Vor Gebrauch öffnen.\"");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oKuehlschrank.Visible = true;
      if (!milch) oMilch.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Er knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte ihn dazu erst öffnen.");
		}
		else Unhandled();
	}
}

function hHaengeschrank01_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein geschlossener Küchenschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
			oHaengeschrank01.Visible = true;
      if (!player.HasInventory(iGlas)) oGlas.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Tür ist bereits zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hHerd_AnyClick()
{
	if (any_click_move(170, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Herd.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht, was ich da rein tun soll.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nicht jetzt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist in die Küchenzeile eingelassen. Also keine Chance.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das brät so schlecht.");
		}
		else Unhandled();
	}
}

function hGeschirrspueler_AnyClick()
{
	if (any_click_move(217, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Geschirrspüler.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist in der Küche verbaut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe kein Geschirr bei mir.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ohne Geschirr brauche ich ihn auch nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist kein Geschirr.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann die Straße sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kann das Fenster nicht rausreißen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich kann vielleicht durchschauen, es aber nicht benutzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Küche braucht nicht gelüftet zu werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Fenster ist zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das werfe ich nicht aus dem Fenster.");
		}
		else Unhandled();
	}
}

function hSchublade01_AnyClick()
{
	if (any_click_move(130, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
			oSchublade01.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSchublade02_AnyClick()
{
	if (any_click_move(107, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
			oSchublade02.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSchublade03_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
			oSchublade03.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist ein Waschbecken.");
			player.FaceDirection(eDirDown);
			player.Say("Das hättest du nicht gedacht, was?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dazu brauche ich erst einmal Werkzeug.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wasche mir die Hände im Bad.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Abfluss ist bereits offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich verstopfe den Abfluss nur, wenn ich Geschirr zu waschen habe.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59) // Leer.
        {
          player.Say("Das Glas ist leer. Da gibt es nichts zum ausschütten.");
        }
        else if (iGlas.Graphic == 60) // Milch.
        {
          player.Say("Ich möchte die Milch nicht wegschütten.");
        }
        else if (iGlas.Graphic == 61) // MSS
        {
          player.Say("Ich brauche die Milchsockensäure noch.");
        }
        else if (iGlas.Graphic == 62) // Wasser
        {
          PlayAmbientSound(1, 95, 150, 51, 131);
          Wait(50);
          iGlas.Graphic = 59;
          StopAmbientSound(1);
        }
        else if (iGlas.Graphic == 69) // Socke
        {
          player.Say("Mit der Socke würde ich die Spüle verstopfen.");
        }
      }
			else player.Say("Damit würde ich die Spüle verstopfen.");
		}
		else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kommt Wasser raus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann läuft mir die Küche mit Wasser voll.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe nichts, was ich waschen könnte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !oWasser.Visible )
			{
				PlayAmbientSound(1, 95, 150, 260, 130);
				oWasser.Visible = true;
				Door[eDoorNumWasser2].i_GlobalInt = eDoorOpen;		// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
				StopAmbientSound(1);
				oWasser.Visible = false;
				Door[eDoorNumWasser2].i_GlobalInt = eDoorClosed;		// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Hahn sitzt fest in der Wand.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59) // Leer.
        {
          oWasser.Visible = true;
          PlayAmbientSound(1, 95, 150, 51, 131);
          Wait(50);
          iGlas.Graphic = 62;
          oWasser.Visible = false;
          StopAmbientSound(1);
        }
        else if (iGlas.Graphic == 60) // Milch.
        {
          player.Say("Ich möchte die Milch nicht mit Wasser verdünnen.");
        }
        else if (iGlas.Graphic == 61) // MSS
        {
          player.Say("Das würde die Milchsockensäure ruinieren.");
        }
        else if (iGlas.Graphic == 62) // Wasser
        {
          player.Say("Da ist bereits Wasser drin.");
        }
        else if (iGlas.Graphic == 69) // Socke
        {
          player.Say("Ich möchte die Socke nicht nass machen. Die stinkt dann noch mehr.");
        }
      }
			else player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hHaengeschrank02_AnyClick()
{
	if (any_click_move(140, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
			oHaengeschrank02.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hDoppelschrank_AnyClick()
{
	if (any_click_move(120, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Doppelschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
			oDoppelschrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSpuelschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Schrank unter der Spüle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
			oSpuelschrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if (player.ActiveInventory == iGlas)
      {
        player.Say("Das ist nicht der korrekte Schrank für das Glas.");
      } else player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
****************************/
function oMikrowelle_AnyClick()
{
	if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle. Standard-Modell.");
			player.Say("Die Mikrowellentür ist auf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Mikro ist noch zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(83);
			oMikrowelle.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Laut Gebrauchsanweisung soll ich das nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oKuehlschrank_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich muss mir demnächst mal einen mit Gefrierfach kaufen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich war froh als er endlich hier stand. Der kommt mir erst weg, wenn ich einen neuen kaufe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und was soll ich da reinlegen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oKuehlschrank.Visible = false;
      if (!milch) oMilch.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Tür knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iMilch)
      {
        milch = false;
        aSound4.Play();
        player.LoseInventory(iMilch);
        oMilch.Visible = true;
      }
      else if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59) player.Say("Ein leeres Glas muss nicht gekühlt werden.");
        else if (iGlas.Graphic == 60) player.Say("Ich brauche jetzt keine gekühlte Milch.");
        else if (iGlas.Graphic == 61) player.Say("Die Milchsockensäure muss nicht gekühlt werden.");
        else player.Say("Das muss nicht gekühlt werden.");
      }
			else player.Say("Das gehört nicht in den Kühlschrank.");
		}
		else Unhandled();
	}
}

function oHaengeschrank01_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
      if (oGlas.Visible == true) player.Say("Da steht nur ein Glas drin.");
			else player.Say("Da ist nichts drin. Ich sollte vielleicht mal wieder einkaufen fahren.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der Schrank ist bereits auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound83.Play();
			oHaengeschrank01.Visible = false;
      if (!player.HasInventory(iGlas)) oGlas.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59)
        {
          player.LoseInventory(iGlas);
          oGlas.Visible = true;
        } else player.Say("Ich stelle da kein volles Glas rein. Sonst vergesse ich es da drin und wenn ich es später wiederfinde lebt der Inhalt bereits.");
      }
			else player.Say("Dann vergesse ich es da drin wieder.");
		}
		else Unhandled();
	}
}

function oHaengeschrank02_AnyClick()
{
	if (any_click_move(140, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der Schrank ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound83.Play();
			oHaengeschrank02.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        player.Say("Das ist nicht der korrekte Schrank für das Glas.");
      } else player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oKettensaege_AnyClick()
{
	if (any_click_move(200, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine schöne rote Kettensäge.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			PlaySound(4);
      oKettensaege.Visible = false;
      player.AddInventory(iChainsaw);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Mit was?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die möchte ich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Alle Verschraubungen sind bereits zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die läuft ohne Strom nicht an.");
			player.Say("Aber einmal am Starter ziehen, damit der Kolben nicht fest frisst kann nicht schaden.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Grundkörper federt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Diese Dinge kann man nicht miteinander benutzen.");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound83.Play();
			oSchrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        player.Say("Das ist nicht der korrekte Schrank für das Glas.");
      } else player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oDoppelschrank_AnyClick()
{
	if (any_click_move(120, 130, eDirUp))
	{
    if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound83.Play();
			oDoppelschrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade01_AnyClick()
{
	if (any_click_move(130, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound1.Play();
			oSchublade01.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade02_AnyClick()
{
	if (any_click_move(107, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound1.Play();
			oSchublade02.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade03_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound1.Play();
			oSchublade03.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSpuelschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
      aSound83.Play();
			oSpuelschrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if (player.ActiveInventory == iGlas)
      {
        player.Say("Das ist nicht der korrekte Schrank für das Glas.");
      } else player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oMilch_AnyClick()
{
  if (any_click_move(60, 130, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Milchpackung wo sie hingehört.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      PlaySound(4);
      player.AddInventory(iMilch);
      oMilch.Visible = false;
      milch = true;
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Ich sehe keinen Grund, die Packung zu öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Packung ist noch genauso zu, wie zu dem Zeitpunkt als ich sie gekauft habe.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Dann würde die ganze Milch oben rauskommen. Das möchte ich nicht.");
    }
    else if (UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Ich kann sie auch einfach nehmen.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        player.Say("Ich sollte die Milch dafür erstmal aus dem Kühlschrank nehmen.");
      }
      else
      {
        player.Say("Diese Dinge möchte ich nicht mit der Milch benutzen.");
      }
    }
    else Unhandled();
  }
}

function oGlas_AnyClick()
{
  if (any_click_move(250, 130, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      player.Say("Ein leeres Glas");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      PlaySound(4);
      oGlas.Visible = false;
      player.AddInventory(iGlas);
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Das Glas hat keinen Deckel zum öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Das Glas hat keinen Deckel zum schließen.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das Glas zu bewegen, bringt auch nichts.");
    }
    else Unhandled();
  }
}

/****************************
*   Regionen-Funktionen
****************************/

