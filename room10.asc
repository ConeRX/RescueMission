// Dachbodenraum 2 (Kevins Haus)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumDachboden].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumDachboden].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oSchublade_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich nehme die Schublade nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ist doch schon offen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oSchublade.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in die Schublade legen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hFenster_AnyClick()
{
	if (any_click_move(180, 128, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann aus dem Fenster sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Fenster lassen sich für gewöhnlich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Draußen ist es hell.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Mir ist mal der Griff abgebrochen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("A: Mir ist mal der Griff abgebrochen.");
			player.Say("B: Es ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir nichts.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(175, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Schreibtischlampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich denke die Lampe brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Hier ist es doch noch hell genug.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hat keinen Sinn.");
		}
		else Unhandled();
	}
}

function hBuchregal_AnyClick()
{
	if (any_click_move(100, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Bücherregal.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will jetzt nicht lesen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
			Wait(40);
			player.Say("Glaube ich.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hBuecher_AnyClick()
{
	/* Im Starterpack keine Bücher auswählbar, aber mal voirbereitet.
	   Kann später im Namen angepasst und benutzt werden */
	return hBuchregal_AnyClick();
}

function hPapierstapel_AnyClick()
{
	if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leere Blätter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die liegen hier ganz gut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche momentan kein Papier.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazwischen ist kein falsches Blatt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Stapel liegt. Es braucht nichts geschlossen zu werden.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich brauche keinen Stapel Papier verrücken.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Außer einem Stift funktioniert das mit keinem meiner Gegenstände.");
		}
		else Unhandled();
	}
}

function hSchublade_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich will sie nicht mit mir herumtragen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oSchublade.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Schublade ist bereits zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst sollte ich sie öffnen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
