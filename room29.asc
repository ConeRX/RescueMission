// Eingangsflur

/****************************
*   Variablen
****************************/


/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerEingang].Init(oTuer01, hTuer01);
  //Door[eTuerKeller].Init(oTuer02, hTuer02);
  
  if (player.PreviousRoom == 18)
  {
    ControllMode(true, true);
    player.Transparency = 0;
  }
}

function room_FirstLoad()
{
  oTuerknauf.Clickable = false;
}

function room_AfterFadeIn()
{
  
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if (any_click_move(40, 135, eDirectionLeft))
  {
    if(Door[eTuerEingang].Click()==0)
      Unhandled();
  }  
}

function hTuer02_AnyClick()
{
  //if(Door[eTuerKeller].Click()==0) Unhandled();
  if (any_click_move(285, 135, eDirectionRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      //player.Say("Eine Tür.");
      player.ChangeRoom(18);
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Schon mal eine Tür aus ihren Angeln gerissen?");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      if (oTuerknauf.Visible)
      {
        player.Say("Verschlossen.");
      } else player.Say("Geht ohne Türknauf schlecht.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Tür ist bereits zu.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iSchraubenzieher)
      {
        if (tuerknaufGlobal == 0) // Kevin weiß noch nicht, dass er einen Türknauf braucht.
        {
          player.Say("Dafür sehe ich keinen Grund.");
        }
        else if (tuerknaufGlobal == 1) // Kevin braucht einen Türknauf.
        {
          aSound61.Play();
          Wait(5);
          aSound62.Play();
          Wait(10);
          aSound63.Play();
          Wait(20);
          aSound4.Play();
          Wait(20);
          oTuerknauf.Visible = false;
          player.AddInventory(iTuerknauf);
          tuerknaufGlobal++;
        }
        else if (tuerknaufGlobal >= 2) // Kevin hat bereits einen Türknauf abmontiert.
        {
          if (oTuerknauf.Visible) // Kevin hat ihn nicht hier abmontiert.
          {
             player.Say("Ich brauche den Türknauf nicht.");
          } else player.Say("Ich habe den Türknauf bereits abmontiert."); // Kevin hat ihn hier abmontiert.
        }
      }
      else if (player.ActiveInventory == iSchluesselGelb || player.ActiveInventory == iHaustuerKey || player.ActiveInventory == iZimmerschluessel || player.ActiveInventory == iCandleKey)
      {
        player.Say("Das ist nicht der richtige Schlüssel.");
      }
      else if (player.ActiveInventory == iTuerknauf)
      {
        if (!oTuerknauf.Visible)
        {
          player.Say("Warum sollte ich den Türknauf wieder dran schrauben?");
        } else player.Say("Die Tür hat bereits einen Türknauf.");
      }
      else
      {
        player.Say("Diesen Gegenstand kann ich nicht mit der Tür benutzen.");
      }
    }
    else Unhandled();
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hWohnzimmer_AnyClick()
{
  if (any_click_move(88, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(28, 250, 120);
      player.FaceDirection(eDirectionDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es zum Wohnzimmer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(28, 250, 120);
      player.FaceDirection(eDirectionDown);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist auf.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKleiderhaken_AnyClick()
{
  if (any_click_move(165, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Kleiderhaken.");	
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Die bleibt da hängen.");			
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);			
			player.Say("Die lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Die lässt sich nicht schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Hnngh.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich da nicht anhängen.");
		}
		else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
***********************/
