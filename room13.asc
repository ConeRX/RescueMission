// Badezimmer (Kevins Haus)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumBad].Init(oTuer, hTuer);
	Door[eDoorNumWasser1].Init(oWasser, hWasserhahn);
	oWasser.Clickable = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumBad].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/


/****************************
*   Hotspot-Funktionen
****************************/
function hWasserhahn_AnyClick()
{
	if (any_click_move(210, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der lässt sich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen und schließen wäre besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !oWasser.Visible )
			{
				PlayAmbientSound (1, 95, 150, 100, 119);
				oWasser.Visible = true;
				Door[eDoorNumWasser1].i_GlobalInt = eDoorOpen;		// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
				StopAmbientSound(1);
				oWasser.Visible = false;
				Door[eDoorNumWasser1].i_GlobalInt = eDoorClosed;	// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59) // Leer.
        {
          oWasser.Visible = true;
          PlayAmbientSound(1, 95, 150, 51, 131);
          Wait(50);
          iGlas.Graphic = 62;
          oWasser.Visible = false;
          StopAmbientSound(1);
        }
        else if (iGlas.Graphic == 60) // Milch.
        {
          player.Say("Ich möchte die Milch nicht mit Wasser verdünnen.");
        }
        else if (iGlas.Graphic == 61) // MSS
        {
          player.Say("Das würde die Milchsockensäure ruinieren.");
        }
        else if (iGlas.Graphic == 62) // Wasser
        {
          player.Say("Da ist bereits Wasser drin.");
        }
        else if (iGlas.Graphic == 69) // Socke
        {
          player.Say("Ich möchte die Socke nicht nass machen. Die stinkt dann wahrscheinlich noch mehr.");
        }
      }
			else player.Say("Damit kann ich nichts anfangen.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(210, 115, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Darin kann man sich die Hände waschen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist an der Wand verschraubt und lässt sich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Meine Hände sind sabuer genug.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Abfluss ist bereits offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Den Abfluss möchte ich nicht verstopfen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 59) // Leer.
        {
          player.Say("Das Glas ist leer. Da gibt es nichts zum ausschütten.");
        }
        else if (iGlas.Graphic == 60) // Milch.
        {
          player.Say("Ich möchte die Milch nicht wegschütten.");
        }
        else if (iGlas.Graphic == 61) // MSS
        {
          player.Say("Ich brauche die Milchsockensäure noch.");
        }
        else if (iGlas.Graphic == 62) // Wasser
        {
          PlayAmbientSound(1, 95, 150, 51, 131);
          Wait(50);
          iGlas.Graphic = 59;
          StopAmbientSound(1);
        }
        else if (iGlas.Graphic == 69) // Socke
        {
          player.Say("Mit der Socke würde ich die Spüle verstopfen.");
        }
      }
			else player.Say("Das muss nicht gewaschen werden.");
		}
		else Unhandled();
	}
}

function hSpiegel_AnyClick()
{
	if (any_click_move(210, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin der Beweis: Computerspiele machen schön.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt da hängen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann man den Spiegel nicht putzen.");
		}
		else Unhandled();
	}
}

function hBadewanne_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da bade ich immer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Im Moment bin ich sauber genug.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Überleg dir was anderes.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hat in der Badewanne nichts zu suchen.");
		}
		else Unhandled();
	}
}

function hFussabtreter_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Fußabtreter.");
      player.Say("Ich mag blau.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt da liegen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe saubere Schuhe.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich nicht mit dem Fußabtreter benutzen.");
		}
		else Unhandled();
	}
}

function hToilette_AnyClick()
{
	if (any_click_move(45, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Toilette.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Porzellan bleibt da.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da wäre ich ganz gerne alleine!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Wenn ich alleine bin.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich die Toilette nicht hinunter spülen.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(315, 120, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann nach draußen sehen!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt so.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sehe nach draußen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Klassischer Satz: Ich kann es nicht öffnen!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Fenster bleibt zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hKette_AnyClick()
{
	if (any_click_move(45, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Zugkette.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die brauche ich am Spülkasten.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			PlaySound(38);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche die Kette ganz.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Kette braucht nicht geschlossen zu werden.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(38);
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sie schwingt unmerklich.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Und wass willst du damit genau bewirken?");
		}
		else Unhandled();
	}
}

function hDuschkopf_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Duschkopf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Er ist nicht verstopft und muss deshalb auch nicht abmontiert werden.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Im Moment bin ich sauber genug.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Er ist nicht verstopft und muss deshalb auch nicht abmontiert werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der sitzt stramm auf dem Rohr.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da wackelt nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht durch die Löcher.");
		}
		else Unhandled();
	}
}

function hWaschmaschine_AnyClick()
{
	if (any_click_move(262, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Waschmaschine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
      if (player.HasInventory(iSocke))
      {
        player.Say("Ich wasche doch nicht die Schmutzwäsche von fremden Leuten.");
      } else player.Say("Im Moment habe ich keine dreckigen Klamotten.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die steht da gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
      if (player.ActiveInventory == iSocke)
      {
        player.Say("Ich wasche doch nicht die Schmutzwäsche von fremden Leuten.");
      } else player.Say("Das muss nicht gewaschen werden.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
