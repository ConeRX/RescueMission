// Flur im Erdgeschoss

/****************************
*   Variablen
****************************/

bool socke = false; //Ist nötig, da die Socke aus den Inventory verschwindet, sobald man sie ins Glas gibt.

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerWohnzimmer].Init(oTuer01, hTuer01);
  Door[eTuerBibliothek].Init(oTuer02, hTuer02);
  //Door[eTuerKammer].Init(oTuer03, hTuer03);
  hObergeschoss.Enabled = false;
}

function room_AfterFadeIn()
{/*
  if (player.PreviousRoom == 20)
  {
    player.Walk(160, 105, eBlock, eWalkableAreas);
    player.FaceDirection(eDirDown);
  }*/
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerWohnzimmer].Click()==0) Unhandled();
}

function hTuer02_AnyClick()
{
  if (keypad_function == 2)
  {
    if(Door[eTuerBibliothek].Click()==0) Unhandled();
  }
  else
  {
    if (any_click_move(40, 135, eDirLeft))
    {
      if (UsedAction(eActLookAt))
      {
        Wait(5);
        player.Say("Eine Tür.");
      }
      else if (UsedAction(eActUse))
      {
        Wait(5);
        player.Say("Man benutzt Türen, indem man sie öffnet oder schließt.");
      }
      else if (UsedAction(eActPickUp))
      {
        Wait(5);
        player.Say("Schon mal eine Tür aus ihren Angeln gerissen?");
      }
      else if (UsedAction(eActOpen))
      {
        Wait(5);
        player.Say("Abgeschlossen.");
      }
      else if (UsedAction(eActClose))
      {
        Wait(5);
        player.Say("Ist bereits zu.");
      }
      else if (UsedAction(eActPull) || UsedAction(eActPush))
      {
        Wait(5);
        player.Say("Da bewegt sich nichts.");
      }
      else if (UsedAction(eActUseInventory))
      {
        Wait(5);
        if (player.ActiveInventory == iSchluesselGelb || player.ActiveInventory == iHaustuerKey || player.ActiveInventory == iZimmerschluessel || player.ActiveInventory == iCandleKey)
        {
          player.Say("Der Schlüssel passt nicht.");
        } else player.Say("Das hilft mir auch nicht dabei, die Tür zu öffnen.");
      }
      else Unhandled();
    }
  }
}

function hTuer03_AnyClick()
{
  //if(Door[eTuerKammer].Click()==0) Unhandled();
  
  if (any_click_move(88, 130, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Tür.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      PlaySound(2);
      oTuer03.Visible = true;
      Wait(20);
      player.Say("Nur eine leere Abstellkammer.");
      Wait(5);
      PlaySound(3);
      oTuer03.Visible = false;
    }
    else Unhandled();
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hObergeschoss_AnyClick()
{/*
  if (any_click_move(160, 105, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
      player.Walk(270, 70, eBlock, eWalkableAreas);
      Wait(10);
			player.ChangeRoom(20, 190, 120);
      player.FaceDirection(eDirRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach oben.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Walk(270, 70, eBlock, eWalkableAreas);
      Wait(10);
			player.ChangeRoom(20, 190, 120);
      player.FaceDirection(eDirRight);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es geht nicht auf.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es geht nicht zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }*/
  
}

function hTelefon_AnyClick()
{
  if (any_click_move(123, 131, eDirUp))
   {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Telefon. MIT SCHNUR!");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Wie telefoniert man gratis? Man benutzt das Telefon eines anderen!");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Dafür habe ich ein Handy.");
      Wait(5);
      player.Say("Ich sollte es nur mal wiederfinden.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Würde mit einem Schraubenzieher zwar gehen, aber was würde mir das bringen?");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Ein Telefon zu schließen ist keine sonderlich sinnvolle Aktion.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Da bewegt sich rein gar nichts. Außer dem Hörer natürlich.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iSchraubenzieher)
      {
        player.Say("Was würde ich damit erreichen, wenn ich das Telefon aufschraube?");
      } else player.Say("Diese Dinge möchte ich nicht miteinander benutzen.");
    }
    else Unhandled();
  }
}

/****************************
*   Region-Funktionen
****************************/

function region1_WalksOnto()
{
  player.EnterRoom(20, 198, 122, eDirRight);
}

/****************************
*   Objekt-Funktionen
****************************/


function oWaeschekorb_AnyClick()
{
  if (any_click_move(234, 130, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      if (!socke)
      {
        if (alchemiebuch)
        {
          player.Say("Also dann, Augen zu und durch!");
          Wait(5);
          PlaySound(4);
          player.AddInventory(iSocke);
          socke = true;
        }
        else player.Say("Ganz eindeutig der Korb für die schmutzige Wäsche.");
      }
      else player.Say("Ganz eindeutig der Korb für die schmutzige Wäsche.");
    }
    else if (UsedAction(eActUse) || UsedAction(eActPickUp))
    {
      Wait(5);
      if (!socke)
      {
        if (alchemiebuch)
        {
          player.Say("Also dann, Augen zu und durch!");
          Wait(5);
          PlaySound(4);
          player.AddInventory(iSocke);
          socke = true;
        }
        else player.Say("Ohne guten Grund fasse ich da nicht rein.");
      }
      else player.Say("Ich fasse da nicht nochmal rein.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Da gibt es nichts zu öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Da gibt es nichts zu schließen.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Den Korb zu bewegen bringt auch nichts. Da befindet sich nichts drunter.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Das möchte ich nicht dort reinwerfen.");
    }
    else Unhandled();
  }
}
