// Schlafzimmer

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  SetBackgroundFrame(0);
  Door[eTuerSchlafzimmer].Init(oTuer01, hTuer01);
  oFakeGUI.Clickable = false;
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerSchlafzimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hBett_AnyClick()
{
  if (any_click_move(105, 130, eDirectionRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hier schlafen wohl Bernards Eltern.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Das bleibt hier.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Das ist doch nur ein Bett.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Das ist doch nur ein Bett.");
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);		
			player.Say("Ich will jetzt nicht schlafen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf das Bett legen.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
  if (any_click_move(285, 125, eDirectionRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann ins Nachbarhaus sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schließen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hNachtschrL_AnyClick()
{
  if (any_click_move(105, 130, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Nachtschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("So was nehme ich nicht mit.");
		}
		else if (UsedAction(eActOpen))
		{
      Wait(5);
      aSound85.Play();
      oTuerL.Visible = true;
      Wait(5);
      player.Say("Nichts drin.");
      aSound5.Play();
      oTuerL.Visible = false;
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);		
      player.Say("Ist doch schon zu.");
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);		
			player.Say("Soll ich mich da etwa drauf stellen?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf das Schränkchen legen.");
		}
		else Unhandled();
	}
}

function hNachtschrR_AnyClick()
{
  if (any_click_move(225, 130, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Nachtschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("So was nehme ich nicht mit.");
		}
		else if (UsedAction(eActOpen))
		{
      Wait(5);
      aSound85.Play();
      oTuerR.Visible = true;
      player.Say("Nichts drin.");
      aSound5.Play();
      oTuerR.Visible = false;
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);		
      player.Say("Ist doch schon zu.");
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);		
			player.Say("Soll ich mich da etwa drauf stellen?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf das Schränkchen legen.");
		}
		else Unhandled();
	}
}

function hLampeL_AnyClick()
{
  if (any_click_move(105, 130, eDirectionUp))
	{
    if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Lampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      player.FaceDirection(eDirectionDown);
      Wait(10);
			player.Say("Schon mal was von Taschenlampen gehört?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Hier ist es hell genug.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie sieht geschlossen aus.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse sie besser da stehen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lasse sie besser da stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hLampeR_AnyClick()
{
  if (any_click_move(225, 130, eDirectionUp))
	{
    if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Lampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      player.FaceDirection(eDirectionDown);
      Wait(10);
			player.Say("Schon mal was von Taschenlampen gehört?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Hier ist es hell genug.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie sieht geschlossen aus.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse sie besser da stehen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lasse sie besser da stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hWand_AnyClick()
{
  if (any_click_move(260, 129, eDirectionUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Hinter dieser Wand befindet sich irgendetwas.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Da lässt sich nichts benutzen.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      aSound45.Play();
      oSicherungskasten.Visible = true;
      hWand.Enabled = false;
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Da gibt es nichts zum öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Da gibt es nichts zum schließen.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Komm Wand, lass dich drücken!");
    }
    else Unhandled ();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oTuerL_AnyClick()
{
  if (any_click_move(105, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein leeres Nachtschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("So was nehme ich nicht mit.");
		}
		else if (UsedAction(eActOpen))
		{
      Wait(5);		
        player.Say("Die Tür ist schon offen.");
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oTuerL.Visible = false;
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);
      aSound5.Play();
      oTuerL.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in das Schränkchen legen.");
		}
		else Unhandled();
	}
}

function oTuerR_AnyClick()
{
  if (any_click_move(225, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein leeres Nachtschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("So was nehme ich nicht mit.");
		}
		else if (UsedAction(eActOpen))
		{
      Wait(5);		
        player.Say("Die Tür ist schon offen.");
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oTuerR.Visible = false;
		}
		else if (UsedAction(eActUse))
		{
      Wait(5);
      aSound5.Play();
      oTuerR.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in das Schränkchen legen.");
		}
		else Unhandled();
	}
}

function oSicherungskasten_AnyClick()
{
  if (any_click_move(260, 129, eDirectionUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Sieht aus wie ein Sicherungskasten.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      dSicherungskasten.Start();
      ControllMode(false, true);
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Den kann ich nicht aus der Wand reißen.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Den kann ich nicht öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Den kann ich nicht schließen.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Den kann ich nicht weiter in die Wand drücken.");
    }
    else Unhandled ();
  }
}

