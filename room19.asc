// Bernards Zimmer

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  //aMusic6.Play();
  Door[eTuerBernardsZimmer].Init(oTuer01, hTuer01);
  //oComputer.SetView(VCOMPUTERBERN, 0, 0);
  //oComputer.Animate(0, 9, eRepeat, eNoBlock);
  oPerpetuumMobile.SetView(VPERPETUUM, 0, 0);
  oPerpetuumMobile.Animate(0, 7, eRepeat, eNoBlock);
  
  if (player.PreviousRoom == 20)
  {
    oTuer01.Visible = true;
    cBernard.FaceDirection(eDirLeft);
  } else cBernard.FaceDirection(eDirUp);
  ControllMode(false, false);
}

function room_AfterFadeIn()
{
  if (player.PreviousRoom == 3)
  {
    StartCutscene(eSkipESCOrRightButton);
    
    cBernard.Say("So und noch ein paar Bugs in den Code schreiben und fertig!");
    FaceDirection (4, DIR_DOWN);
    cBernard.Say("Mein neues Sicherheitssystem ist fertig!"); 
    cBernard.Say("Wenn Darth Rayden hier ist, wird er begeistert sein!");
    cNoChar.Say("#brumm#");
    cNoChar.Say("#scramm#");
    cNoChar.Say("#klapper#");
    cBernard.Walk(270, 135, eBlock, eWalkableAreas);
    cBernard.Say("Ein Umzugswagen?");
    cBernard.Say("Oh nein!");
    cBernard.FaceDirection(eDirDown);
    cBernard.Say("Er ist schon hier!");
    cBernard.FaceDirection(eDirLeft);
    cBernard.Say("Ich muss das System nochmal testen!");
    cBernard.Walk(78, 130, eBlock, eWalkableAreas);
    cBernard.FaceDirection(eDirUp);
    cBernard.Say("So, einschalten");
    aSound3.Play();
    oTuer01.Visible = false;
    Wait(30);
    aMusic9.Play();
    cBernard.Say("Gut, alles läuft einwandfrei.");
    cBernard.Say("Und nun ausschalten.");
    Wait(30);
    cBernard.Say("Ausschalten!");
    cBernard.Say("AUSSCHALTEN!!!");
    cBernard.Say("Oh nein!");
    cBernard.LockView(BERNARDU);
    cBernard.SpeechView = BERNARDU;
    cBernard.FaceDirection(eDirDown);
    cBernard.Say("Doors XP ist abgestürzt!");
    Wait(5);
    cBernard.Say("Wenn ich diesen Phil Gates mal treffe...");
    Wait(20);
    cBernard.FaceDirection(eDirRight);
    cBernard.Say("Ich kann nur hoffen, Darth Rayden findet hierher.");
    Game.StopAudio(eAudioTypeMusic);
    Wait(5);
    //player.EnterRoom(15, 130, 140, eDirRight); // Old
    player.EnterRoom(15, 120, 140, eDirRight);
    EndCutscene();
  }
  
  if (player.PreviousRoom == 20)
  {
    StartCutscene(eSkipESCOrRightButton);
    aMusic17.Play();
    cBernard.UnlockView();
    cBernard.SpeechView = BERNARDT;
    cBernard.Say("Na endlich hat mich jemand gefunden.");
    cBernard.Say("Und mein Sicherheitssystem hast du somit auch umgangen.");
    player.Say("DEIN Sicherheitssystem? Dann must du Bernard sein.");
    cBernard.Say("Aha und du bist dann Darth Rayden?");
    player.Say("Ja, aber mein richtiger Name lautet Kevin.");
    cBernard.Say("Gut merke ich mir. Ach ja, Glückwunsch das du mein Sicherheitssystem umgangen hast!");
    player.Say("Für einen Viedeospieler wie mich ist auch so ein reales Sicherheitssystem ein Klacks!");
    cBernard.Say("Ach?");
    player.Say("Ja.");
    
    if (greentalk)
    {
      player.Say("Mal eine Frage: Was ist das für ein \"Tier\" auf dem Dachboden?");
      cBernard.Say("Meinst du Grün?");
      player.Say("Ja, dieses grüne Ding das sagt es käme aus dem Tollhaus.");
      cBernard.Say("Grün ist ein Tentakel und kein Ding.");
      player.Say("Und wo kommt Grün her?");
      cBernard.Say("Aus dem Tollhaus.");
      cBernard.Say("Der dort lebende verrückte Wissenschaftler hat die Tentakel als Haustiere erschaffen.");
      cBernard.Say("Die ganze Geschichte spar ich mir für ein anderes mal auf.");
    }
    
    if (tvmag)
    {
      player.Say("Ach ja, ich habe gelesen das ab heute die Maniac Mansion TV-Serie läuft.");
      cBernard.Say("Ich habe zwar gehört sie soll nicht der Bringer sein, aber man kann sie sich mal anschauen.");
      player.Say("Ich habe einen HDTV-Fernseher wir können ihn ja benutzen.");
      cBernard.Say("Gut gehen wir.");
    }
    else
    {
      player.Say("Ach ja, ich hab mir einen neuen HDTV-Fernseher gekauft.");
      cBernard.Say("Kann ich mir den mal anschauen?");
      player.Say("Klar.");
    }
    
    // Kevin und Bernard laufen heraus
    player.FaceDirection(eDirLeft);
    Wait(5);
    player.Transparency = 100;
    cBernard.Walk(player.x, player.y, eBlock, eWalkableAreas);
    cBernard.Transparency = 100;
    Wait(5);
    
    player.ChangeRoom(4); // Zu den Credits
    EndCutscene();
  }
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBernardsZimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hDiplom_AnyClick()
{
  if (any_click_move(175, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Gewinner des Eierkopfpreises.'");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich will es nicht beschädigen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich kann es nicht öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ich kann es nicht schliessen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function hBuecher_AnyClick()
{
  if (any_click_move(220, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Lieblingsbücher.");
      Wait(10);
      player.FaceDirection(eDirDown);
      player.Say("Von Physik bis Astronomie ist alles dabei.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Oh, die kenne ich schon auswendig.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich kenne alle Bücher auswendig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich will jetzt nicht lesen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Geschlossene Lektüre.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hChuck_AnyClick()
{
  if (any_click_move(75, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein 'Geschenk' von Dr. Fred.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich vergreife mich nicht an wehrlosen Pflanzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hBett_AnyClick()
{
  if (any_click_move(220, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Bettdecke liegt mathematisch genau ... ");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Noch zu viele Photonen im Raum.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Die Decke liegt gerade so schön.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster01_AnyClick()
{
  if (any_click_move(120, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann Hoagies Haus sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das ist kein echtes Fenster.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (any_click_move(275, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein guter Tag für die Photosynthese.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich könnte herausfallen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeR.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

function hSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound1.Play();
      oSchubladeL.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oComputer_AnyClick()
{
  if (any_click_move(90, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wir beide haben schon eine Menge Adventures erlebt!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist doch kein Laptop.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Der funktioniert im Moment nicht.");
      player.FaceDirection(eDirDown);
      Wait(5);
      player.Say("Ich habe Doors XP installiert.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der hat ein geschlossenes Gehäuse.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function oSchubladeL_AnyClick()
{
  if (any_click_move(80, 130, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeL.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oSchubladeR_AnyClick()
{
  if (any_click_move(120, 130, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchubladeR.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oPerpetuumMobile_AnyClick()
{
  if (any_click_move(175, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Arbeit für Jugend forscht.");
      player.FaceDirection(eDirDown);
      Wait(5);
      player.Say("Es hört einfach nicht auf, sich zu drehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Im Moment brauche ich keine unerschöpfliche Energiequelle.");
      player.FaceDirection(eDirDown);
      Wait(5);
      player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}

function oKissen_AnyClick()
{
  if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein flauschiges Daunenkissen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oKissen.Visible = false;
      Wait(5);
      aSound4.Play();
      Wait(5);
      //player.AddInventory(iKissen);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Unhandled();
  }
}
