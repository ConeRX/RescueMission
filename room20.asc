// Flur im ersten Stock

/****************************
*   Variablen
****************************/

bool stromtuer = false;

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerBritneysZimmer].Init(oTuer01, hTuer01);
  //Door[eTuerBernardsZimmer].Init(oTuer02, hTuer02);
  Door[eTuerSchlafzimmer].Init(oTuer03, hTuer03);
  //Door[eTuerBadezimmer].Init(oTuer04, hTuer04);

  if (player.PreviousRoom == 24)
  {
    player.FaceDirection(eDirRight);
  }
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  //if(Door[eTuerBritneysZimmer].Click()==0) Unhandled();
  
  if (Door[eTuerBritneysZimmer].ClickSpecial(2, 3, iCandleKey, 2) == 0) Unhandled();
}

function hTuer02_AnyClick()
{
  //if(Door[eTuerBernardsZimmer].Click()==0) Unhandled();
  if (any_click_move(271, 133, eDirRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Tür.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.FaceDirection(eDirDown);
      player.Say("Schon mal eine Tür aus ihren Angeln gerissen?.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActUse) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      PlaySound(40);
      player.Say("JAUL!");
      if (!stromtuer)
      { 
        player.Say("Die sch... Tür steht unter Strom!");
        stromtuer = true;
      } else player.Say("Die Tür steht immer noch unter Strom.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Tür ist bereits zu.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iHandschuh)
      {
        StartCutscene(eSkipESCOrRightButton);
        PlaySound(2);
        oTuer02.Visible = true;
        //player.Say("Ha, das Sicherheitssystem ist umgangen!");
        aMusic54.Play();
        Wait(400);
        player.ChangeRoom(19, 40, 135);
        EndCutscene();
      } else player.Say("Das bringt herzlich wenig.");
    }
    else Unhandled ();
  }
}

function hTuer03_AnyClick()
{
  if (oBretter.Visible == false)
  {
    if(Door[eTuerSchlafzimmer].Click()==0) Unhandled();
  }
  else
  {
    if (any_click_move(235, 125, eDirUp))
    {
      if (UsedAction(eActLookAt))
      {
        Wait(5);
        player.Say("Eine vernagelte Tür.");
        Wait(5);
        player.FaceDirection(eDirDown);
        player.Say("Da will wohl jemand nicht wissen, was in dem Raum vor sich geht.");
      }
      else if (UsedAction(eActUse))
      {
        Wait(5);
        player.Say("Geht mit den Brettern davor nicht.");
      }
      else if (UsedAction(eActPickUp))
      {
        Wait(5);
        player.Say("Schon mal eine Tür aus ihren Angeln gerissen?");
        player.Say("Außerdem ist sind immer noch die Bretter.");
      }
      else if (UsedAction(eActOpen))
      {
        Wait(5);
        player.Say("Würde ich ja gerne, aber die Bretter blockieren die Tür.");
      }
      else if (UsedAction(eActClose))
      {
        Wait(5);
        player.Say("Die Tür ist bereits zu.");
      }
      else if (UsedAction(eActPull) || UsedAction(eActPush))
      {
        Wait(5);
        player.Say("Da bewegt sich nichts.");
      }
      else if (UsedAction(eActUseInventory))
      {
        Wait(5);
        player.Say("Das muss ich schon mit den Brettern benutzen.");
      }
      else Unhandled();
    }
  }
}

function hTuer04_AnyClick()
{
  //if(Door[eTuerBadezimmer].Click()==0) Unhandled();
  if (any_click_move(80, 130, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Tür.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      PlaySound(2);
      oTuer04.Visible = true;
      Wait(20);
      player.Say("Nur das Badezimmer.");
      Wait(5);
      PlaySound(3);
      oTuer04.Visible = false;
    }
    else Unhandled();
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hLuke_AnyClick()
{
  if (any_click_move(235, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Luke zum Dachboden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich sie öffnen, oder schliessen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Da komme ich nicht ran.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActUseInventory) && player.ActiveInventory == iLukenoeffner)
		{
      Wait(5);
      PlaySound(72);
      oLeiter.Visible = true;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hTreppe_AnyClick()
{/*
  if (any_click_move(190, 120, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(24, 270, 70);
      player.FaceDirection(eDirLeft);
      //bTreppe = true;
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Treppe nach unten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt keine Treppe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(24, 270, 70);
      player.FaceDirection(eDirLeft);
      //bTreppe = true;
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich kann doch keine Treppe öffnen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ich kann die Treppe nicht schliessen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }*/
  if (any_click_walk (186, 120, eDirLeft) == 0) Unhandled ();
}

/****************************
*   Objekt-Funktionen
****************************/

function oLeiter_AnyClick()
{
  if (any_click_move(235, 130, eDirRight))
	{
    if (UsedAction(eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
      player.EnterRoom(23, 230, 130, eDirLeft);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es zum Dachboden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Leiter ist festgeschraubt.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ist schon offen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(20);
      PlaySound(72);
      oLeiter.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(20);
      PlaySound(72);
      oLeiter.Visible = false;
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function oBretter_AnyClick()
{
  if (any_click_move(235, 125, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine vernagelte Tür.");
      Wait(5);
      player.FaceDirection(eDirDown);
      player.Say("Da will wohl jemand nicht wissen, was in dem Raum vor sich geht.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Die Bretter werde ich kaum einfach so aus der Wand reißen können.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Die Bretter lassen sich nicht öffnen und die Tür auch nicht, solange die Bretter dort sind.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Bretter sind nicht schließbar und die Tür dahinter ist bereits zu.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Noch weiter reindrücken geht nicht.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iSchraubenzieher)
      {
        player.Say("Und weg mit den Dingern!");
        Wait(5);
        aSound72.Play();
        oBretter.Visible = false;
      }
      else if (player.ActiveInventory == iChainsaw)
      {
        player.Say("Gute Idee, nur leider gibt es da ein Problem:");
        Wait(5);
        player.Say("Die Kettensäge hat keinen Strom!");
        Wait(5);
        player.Say("Momentmal!");
        Wait(20);
        player.Say("Die Bretter sind nur ganz leicht angeschraubt!");
        Wait(5);
        aSound72.Play();
        oBretter.Visible = false;
      }
      else player.Say("Damit kriege ich die Bretter auch nicht weg.");
    }
    else Unhandled();
  }
}

/****************************
*   Region-Funktionen
****************************/

function region1_WalksOnto()
{
  player.EnterRoom(24, 255, 77, eDirLeft);
}
