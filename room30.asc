// Haustür

/****************************
*   Variablen
****************************/

bool tuertext;

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerEingang].Init(oTuer01, hTuer01);
  if (player.PreviousRoom == 15) aMusic6.Play();
}

function room_FirstLoad()
{
  player.Walk(175, 135, eBlock, eWalkableAreas);
  player.FaceDirection(eDirRight);
  Wait(50);
  player.Say("Das ist die Adresse, die er mir gegeben hat.");
  player.FaceDirection(eDirUp);
  player.Say("Das sollte es also sein.");
  player.Walk(142, 103, eBlock, eWalkableAreas);
  player.FaceDirection(eDirUp);
  Wait(20);
  aSound5.Play();
  Wait(10);
  aSound5.Play();
  Wait(10);
  aSound5.Play();
  Wait(10);
  player.Say("Warum ist denn abgeschlossen?");
  player.Say("Bernard wollte doch dass ich zu ihm komme?");
  Wait(30);
  player.Say("Mmmh..."); 
  player.Say("Hatte er nicht mal gesagt das er Doors XP verwendet?");
  player.Say("Ist XP vielleicht abgestürzt, während er sein System getestet hat?");
  player.Say("Zumindest wäre das eine Erklärung.");
}

function room_AfterFadeIn()
{

}

function room_RepExec()
{/*
  if (oTuer01.Visible)
  {
    if (!tuertext)
    {
      Wait(20);
      player.Say("Warum zur Hölle ist den abgeschlossen?");
      player.Say("Ich dachte, Bernard wollte das ich zu ihm komme?");
      Wait(30);
      player.Say("Mmmh, hatte er nicht mal gesagt das er Doors XP verwendet?");
      player.Say("Ist XP vielleicht abgestürzt, wärend er sein System getestet hat?");
      player.Say("Zumindest wäre das eine Erklärung.");
      tuertext = true;
    }
  }*/
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  //if(Door[eTuerEingang].Click()==0) Unhandled();
  if (Door[eTuerEingang].ClickSpecial(2, 3, iHaustuerKey, 2) == 0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hFenster01_AnyClick()
{
  if (any_click_move(55, 115, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann das Wohnzimmer sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (any_click_move(228, 115, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann die Küche sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hFussabtreter_AnyClick()
{
  if (any_click_move(140, 125, eDirUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Willkommen'");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Außer Staub liegt da nichts drunter.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Meine Schuhe sind doch sauber.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht hier nicht.");
		}
		else Unhandled();
  }
}

function hGaragetor_AnyClick()
{
  if (any_click_move(445, 105, eDirUp))
	{
    if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es in die Garage.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      //aSound1.Play();
      //oGaragentor.Visible = true;
      player.Say("Die ist verschlossen.");
    }
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das Tor ist geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich das Tor nicht auf.");
		}
		else Unhandled();
  }
}

function hBriefkasten_AnyClick()
{
  if (any_click_move(175, 135, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Briefkasten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den will ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oBriefkasten.Visible = true;
      hBriefkasten.Enabled = false;
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Er beweget sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dazu sollte ich ihn vorher öffnen.");
		}
		else Unhandled();
  }
}

function hKevin_AnyClick()
{
  if (any_click_move(543, 141, eDirRight))
  {
    player.EnterRoom(15, 10, 141, eDirRight);
  }
}

/****************************
*   Objekt-Funktionen
***********************/

function oBriefkasten_AnyClick()
{
  if(any_click_move(175, 135, eDirRight))
	{
    if (UsedAction(eActLookAt))
		{
			Wait(5);
      if (oBriefkasten.Graphic == 473) // Briefkasten ist geschlossen.
      {
        player.Say("Ein Briefkasten.");
      }
      else if (oBriefkasten.Graphic == 472) // Briefkasten ist offen.
      {
        if (!player.HasInventory(iHaustuerKey))
        {
          player.Say("Da liegt ein Schlüssel drin.");
          PlaySound(4);
          player.AddInventory(iHaustuerKey);
        }
        else player.Say("Nichts drin.");
      }
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den ganzen Briefkasten doch nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich habe gerade keine Post zu verschicken.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      if (oBriefkasten.Graphic == 473) // Briefkasten ist geschlossen.
      {
        aSound85.Play();
        oBriefkasten.Graphic = 472;
      }
      else if (oBriefkasten.Graphic == 472) // Briefkasten ist offen.
      {
        player.Say("Ist doch schon offen.");
      }
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      if (oBriefkasten.Graphic == 473) // Briefkasten ist geschlossen.
      {
        player.Say("Es ist doch zu.");
      }
      else if (oBriefkasten.Graphic == 472) // Briefkasten ist offen.
      {
        aSound5.Play();
        oBriefkasten.Graphic = 473;
      }
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Er beweget sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann sollte ich es auch ausreichend frankieren.");
		}
		else Unhandled();
  }
}

function oGaragentor_AnyClick()
{
  if (any_click_move(445, 105, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(21, 50, 130);
      player.FaceDirection(eDirRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es in unsere Garage.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das Tor ist bereits offen.");
    }
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound1.Play();
      oGaragentor.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich das Tor nicht auf.");
		}
		else Unhandled();
  }
}

function oFaehnchen_AnyClick()
{
  if (any_click_move(175, 135, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Briefkastenfähnchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      aSound1.Play();
      if (oFaehnchen.Graphic == 475) // Unten
      {
        oFaehnchen.Graphic = 474;
      }
      else
      {
        oFaehnchen.Graphic = 475;
      }
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das kann man nicht öffnen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das kann ich nicht schließen.");
		}
    else if (UsedAction(eActPull))
		{
			Wait(5);
      if (oFaehnchen.Graphic == 475) // Unten
      {
        aSound1.Play();
        oFaehnchen.Graphic = 474;
      }
      else
      {
        player.Say("Ich habe bereits daran gezogen.");
      }
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      if (oFaehnchen.Graphic == 475) // Unten
      {
        player.Say("Ich kann es nicht drücken.");
      }
      else
      {
        aSound1.Play();
        oFaehnchen.Graphic = 475;
      }
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

