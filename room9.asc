// Dachbodenraum 1 (Kevins Haus)

/****************************
*   Variablen
****************************/



/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumDachboden].Init(oTuer, hTuer);
	/* Im Starterpack nicht click- und nehmbar */
	oKissenL.Clickable = false;
	oKissenR.Clickable = false;
	
	oLukeZu.Clickable = false;
	oLukeZu.Visible = gb_LukeZu;
	if ( gb_LukeZu )
	{
		RestoreWalkableArea(2);
	}
	else
	{
		RemoveWalkableArea(2);
	}
}

function room_FirstLoad()
{
  oTuerknauf.Clickable = false;
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	//if ( Door[eDoorNumDachboden].Click() == 0 ) Unhandled();
  
  if (any_click_move(275, 134, eDirRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Die Tür zum anderen Dachbodenraum.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Schon mal eine Tür aus ihren Angeln gerissen?");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      if (oTuerknauf.Visible)
      {
        player.Say("Sie ist verschlossen und ich habe keinen Schlüssel.");
        Wait(5);
        player.FaceDirection(eDirDown);
        player.Say("Da muss ich nochmal mit meinem Markler drüber sprechen.");
      } else player.Say("Geht ohne Türknauf schlecht.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Tür ist bereits zu.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iSchraubenzieher)
      {
        if (tuerknaufGlobal == 0) // Kevin weiß noch nicht, dass er einen Türknauf braucht.
        {
          player.Say("Dafür sehe ich keinen Grund.");
        }
        else if (tuerknaufGlobal == 1) // Kevin braucht einen Türknauf.
        {
          aSound61.Play();
          Wait(5);
          aSound62.Play();
          Wait(10);
          aSound63.Play();
          Wait(20);
          aSound4.Play();
          Wait(20);
          oTuerknauf.Visible = false;
          player.AddInventory(iTuerknauf);
          tuerknaufGlobal++;
        }
        else if (tuerknaufGlobal >= 2) // Kevin hat bereits einen Türknauf abmontiert.
        {
          if (oTuerknauf.Visible) // Kevin hat ihn nicht hier abmontiert.
          {
             player.Say("Ich brauche den Türknauf nicht.");
          } else player.Say("Ich habe den Türknauf bereits abmontiert."); // Kevin hat ihn hier abmontiert.
        }
      }
      else if (player.ActiveInventory == iSchluesselGelb || player.ActiveInventory == iHaustuerKey || player.ActiveInventory == iZimmerschluessel || player.ActiveInventory == iCandleKey)
      {
        player.Say("Das ist nicht der richtige Schlüssel.");
      }
      else if (player.ActiveInventory == iTuerknauf)
      {
        if (!oTuerknauf.Visible)
        {
          player.Say("Warum sollte ich den Türknauf wieder dran schrauben?");
        } else player.Say("Die Tür hat bereits einen Türknauf.");
      }
      else
      {
        player.Say("Diesen Gegenstand kann ich nicht mit der Tür benutzen.");
      }
    }
    else Unhandled();
  }
}

function hLuke_AnyClick()
{
	if (any_click_move(220, 128, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
			if ( gb_LukeZu )
			{
			}
			else
			{
				player.ChangeRoom(7, 145, 125);
				player.FaceDirection(eDirLeft);
			}
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da unten ist mein Kaminzimmer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			if ( gb_LukeZu )
			{
				player.Say("Die Luke ist zu. Vermutlich hat sie jemand von unten zugemacht.");
				player.Say("Ich komme hier nicht raus.");
			}
			else
			{
				player.ChangeRoom(7, 145, 125);
				player.FaceDirection(eDirLeft);
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPush))
		{
			Wait(5);
			if ( gb_LukeZu )
			{
				player.Say("Die Luke kann man nur von unten öffnen.");
			}
			else
			{
				player.Say("Die Luke ist bereits auf.");
			}
		}
		else if (UsedAction(eActClose) || UsedAction(eActPull))
		{
			Wait(5);
			if ( gb_LukeZu )
			{
				player.Say("Die Luke ist bereits zu.");
			}
			else
			{
				player.Say("Die lässt sich nur von unten schließen.");
			}
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann fällt es in das untere Zimmer.");
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oKissenR_AnyClick()
{
	if (any_click_move(185, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Sofakissen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			PlaySound(4);
			player.AddInventory(iSitzkissen2);
			oKissenR.Visible = false;
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche keine Pause.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann fällt nur die Füllung raus.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Weich.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Zu schwer zum ziehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht.");
		}
		else Unhandled();
	}
}

function oKissenL_AnyClick()
{
	if (any_click_move(90, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Sofakissen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			PlaySound(4);
			player.AddInventory(iSitzkissen1);
			oKissenL.Visible = false;
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche keine Pause.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann fällt nur die Füllung raus.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Weich.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Zu schwer zum ziehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht.");
		}
		else Unhandled();
	}
}

function oFernbedienung_AnyClick()
{
	if (any_click_move(61, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Fernbedienung des Fernsehers.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oFernbedienung.Visible = false;
			PlaySound(4);
			player.AddInventory(iFernbedienung);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sollte sie erst nehmen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche keine Batterien.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist verschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dann fällt sie von der Armlehne.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hBuecher_AnyClick()
{
	if (any_click_move(242, 122, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Einige Bücher ...");
			Wait(5);
			player.Say("... die ich nie gelesen habe.");
			Wait(5);
			player.Say("Was sind das überhaupt für Bücher?");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Zur Zeit habe ich keine Lust zum Lesen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazu müsste ich sie nehmen. Aber das will ich nicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind bereits verschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das will ich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hUhr_AnyClick()
{
	if (any_click_move(165, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine stehengebliebene Uhr.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Uhr brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Sie zeigt halb vier.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Uhr hat keinen Glasdeckel.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da hängen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit wird die Uhr nicht repariert.");
		}
		else Unhandled();
	}
}

function hFernseher_AnyClick()
{
	if (any_click_move(135, 130, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein neuer THX Fernseher.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) && (player.InventoryQuantity[iFernbedienung.ID] == 1))
		{
			Wait(5);
			gMaingui.Visible = false;
			gAction.Visible = false;
			Mouse.Visible = false;
      Wait(40);
      player.ChangeRoom(2); // TV
			//player.ChangeRoom(17); // WinkTV
			//player.ChangeRoom(18); // NewsTV
		}
		else if (UsedAction(eActUse))
		{
			player.Say("Dazu brauche ich eine Fernbedienung.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu ziehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Klick.");
		}
		else if (UsedAction(eActUseInventory) && player.ActiveInventory == iFernbedienung)
		{
			Wait(5);
			PlaySound(93);
      gMaingui.Visible = false;
			gAction.Visible = false;
			Mouse.Visible = false;
      Wait(40);
      player.ChangeRoom(2); // TV
			//player.ChangeRoom(17); // WinkTV
			//player.ChangeRoom(18); // NewsTV
		}
		else if (UsedAction(eActUseInventory)) // alle anderen Inventargegenstände
		{
			Wait(5);
			player.Say("Das soll das denn bringen?");
		}
		else Unhandled();
	}
}

function hSessel01_AnyClick()
{
	if (any_click_move(185, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Im Paar gab es sie billiger.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich schleppe keine Sessel mit mir herum.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte mich jetzt nicht setzen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Mit einem Wort. Nein!");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf den Sessel legen.");
		}
		else Unhandled();
	}
}

function hSessel02_AnyClick()
{
	if (any_click_move(95, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Im Paar gab es sie billiger.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich schleppe keine Sessel mit mir herum.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte mich jetzt nicht setzen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Mit einem Wort. Nein!");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf den Sessel legen.");
		}
		else Unhandled();
	}
}

function hSteckdose_AnyClick()
{
	if (any_click_move(37, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kann man elektronische Geräte dran anschließen.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann hängen die Kabel heraus und ich könnte mir einen elektrischen Schlag holen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche es nicht nachprüfen.");
			player.Say("DA ist Saft drauf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Eine Steckdose kann man nicht schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Und sie aus der Wand reißen?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die sitzt fest.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir nichts.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(165, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die einzige Lichtquelle hier.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich nehme mir doch nicht die einzige Lichtquelle hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Lampe ist bereits an.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich komme nicht ran.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Lampe passt nur an diese Stelle, das bringt also nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich komme nicht an die Lampe ran.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/

