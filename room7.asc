// Kaminzimmer (Kevins Haus)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumKamin].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumKamin].Click() == 0 ) Unhandled();
}

function hDurchgang_AnyClick()
{
	if (any_click_move(120, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
			SetNextScreenTransition(eTransitionCrossfade);
			player.ChangeRoom(8, 190, 130);
			player.FaceDirection(eDirDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach nebenan.");
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oSessel_AnyClick()
{
	if (any_click_move(89, 137, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hab ich letztens bei ebay ersteigert.");
			player.Say("Der Verkäufer hieß \"Edna-Mausi69\". Bernard riet mir zwar ab, aber ich musste diesen Sessel haben.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Momentan nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Keine Zeit.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das würde meinen kostbaren Sessel zerstören.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich habe nichts um ihn abzudecken.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der steht da gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf den Sessel legen.");
		}
		else Unhandled();
	}
}

function oBild_AnyClick()
{
	if (any_click_move(215, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("\"Grüns Essen\"");
      Wait(5);
      player.FaceDirection(eDirDown);
      player.Say("Jetzt auch ohne Deppenapostroph!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Hängt dort doch ganz gut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das passt so.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir nichts.");
		}
		else Unhandled();
	}
}

function oLuke_AnyClick()
{
	if (any_click_move(145, 125, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
			Wait(5);
			player.EnterRoom(9, 220, 128, eDirLeft);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Luke zum Dachboden.");
		}
		else if (UsedAction(eActClose))
		{
      aSound72.Play();
			oLuke.Visible = false;
			RestoreWalkableArea(3);
			gb_LukeZu = true; // Damit bei mehreren Spielern die Luke oben zu dargestellt werden kann.
		}
		else Unhandled();
	}
}

function oLukenoeffner_AnyClick()
{
	if (any_click_move(252, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Lukenöffner.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oLukenoeffner.Visible =false;
			player.AddInventory(iLukenoeffner);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wenn ich was zum Öffnen hätte, könnte ich das damit versuchen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Diese Dinge kann ich nicht miteinander benutzen.");
		}
		else Unhandled();
	}
}

/****************************
*   Hotspot-Funktionen
****************************/
function hLuke_AnyClick()
{
	if (any_click_move(145, 125, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Luke zum Dachboden.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich komme nicht ran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wenn ich was zum öffnen hätte, könnte ich das damit versuchen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Luke ist schon zu.");
		}
		else if (UsedAction(eActPull) && (1 == player.InventoryQuantity[iLukenoeffner.ID]))
		{
			Wait(5);
			player.Say("Klasse, mit Lukenöffner geht es.");
      aSound47.Play();
			oLuke.Visible = true;
			RemoveWalkableArea(3);
			gb_LukeZu = false; // Damit bei mehreren Spielern die Luke oben zu dargestellt werden kann.
		}
		else if (UsedAction(eActPull))
		{
			player.Say("Ich komme nicht ran.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory) && player.ActiveInventory == iLukenoeffner )
		{
			PlaySound(47);
			oLuke.Visible = true;
			RemoveWalkableArea(3);
			gb_LukeZu = false; // Damit bei mehreren Spielern die Luke oben zu dargestellt werden kann.
		}
		else Unhandled();
	}
}

function hKamin_AnyClick()
{
	if (any_click_move(215, 133, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Kamin.");
      if (!player.HasInventory(iLukenoeffner))
      {
        Wait(5);
        player.Say("Da ist ja mein Lukenöffner!");
        player.Say("Wie ist der denn da hin gekommen?");
        PlaySound(4);
        player.AddInventory(iLukenoeffner);
      }
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      if (!player.HasInventory(iLukenoeffner))
      {
        Wait(5);
        player.Say("Da ist ja mein Lukenöffner!");
        player.Say("Wie ist der denn da hin gekommen?");
        PlaySound(4);
        player.AddInventory(iLukenoeffner);
      } else player.Say("Haha. Genau.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Mir fehlt Brenn- und ein Strichholz.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da ist kein Geheimfach dahinter. Zumindest glaube ich dass.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der hat keine Tür zum schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("So funktioniert das nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht verbrennen.");
		}
		else Unhandled();
	}
}

function hChuck_AnyClick()
{
	if (any_click_move(120, 125, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist Chucky die Mörderpflanze.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein, die beißt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Gießen wäre besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
					   UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde sie nicht mit sich machen lassen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das frisst sie nur.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(100, 132, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein nicht zu öffnendes Fenster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist fest gemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir nichts.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
