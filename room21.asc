// Britneys Zimmer

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerBritneysZimmer].Init(oTuer01, hTuer01);
}

function room_FirstLoad()
{
  oSchubalde.Clickable = false;
  
  oLuke.Clickable = false;
}

function room_AfterFadeIn()
{
  if (oLuke.Visible == true) // Notwendig, da es beim Raumwechsel immer zurückgesetzt wird.
  {
    RemoveWalkableArea(1);
  }
}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  //if(Door[eTuerBritneysZimmer].Click()==0) Unhandled();
  if (Door[eTuerBritneysZimmer].ClickSpecial(2, 3, iCandleKey, 2) == 0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hSpiegel_AnyClick()
{
  if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Spiegel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt keinen Spiegel.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich sehe mich.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Den kann man nicht öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKlSchrank_AnyClick()
{
  if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich wühle nicht im Schrank eines Mädchens.");
      Wait(10);
      player.Say("Normalerweise.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKommode_AnyClick()
{
  if (any_click_move(190, 130, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      PlaySound(1);
      oSchubalde.Visible = true;
      Wait(10);
      player.Say("Da ist nur uninteressanter Frauenkram drin.");
      Wait(5);
      PlaySound(1);
      oSchubalde.Visible = false;
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hKleiderschrank_AnyClick()
{
  if (any_click_move(245, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Lila. Warum muss es immer Lila sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ihre Kleider würden mir sowieso nicht passen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hBett_AnyClick()
{
  if (any_click_move(160, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht ziemlich abgenutzt aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Keine Chance. Wer weiß, wer oder was da schon alles lag.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster_AnyClick()
{
  if (any_click_move(20, 135, eDirLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schöne Aussicht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schließen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Nein. Ich könnte herausfallen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}


function hLuke_AnyClick()
{
  if (any_click_move(250, 132, eDirDown))
  {
    if (UsedAction(eActWalkTo))
    {
      if (oLuke.Visible == true)
      {
        player.EnterRoom(25, 385, 45, eDirDown);
      }
    }
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Luke im Boden.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Bitte genauer!");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Man kann keine Luken aus dem Boden reißen.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActPull))
    {
      Wait(5);
      if (oLuke.Visible == false)
      {
        aSound47.Play();
        oLuke.Visible = true;
        RemoveWalkableArea(1);
      } else player.Say("Die ist bereits off.");
    }
    else if (UsedAction(eActClose) || UsedAction(eActPush))
    {
      Wait(5);
      if (oLuke.Visible == true)
      {
        aSound72.Play();
        oLuke.Visible = false;
        RestoreWalkableArea(1);
      } else player.Say("Die ist bereits zu.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      player.Say("Diese Dinge kann ich nicht zusammen benutzen.");
    }
    else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/


function oTeppich_AnyClick()
{ // 250, 132
  if (any_click_move(oTeppich.X+35, oTeppich.Y-7, eDirDown))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein sehr auffällig aussehender Teppich.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Wenn ich eine Katze wäre, würde mich dort jetzt zusammenkauern.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      if (oTeppich.X == 215)
      {
        aSound4.Play();
        oTeppich.Visible = false;
        Wait(5);
        player.Walk(47, 131, eBlock, eWalkableAreas);
        player.FaceDirection(eDirDown);
        Wait(5);
        oTeppich.SetPosition(12, 141);
        oTeppich.Visible = true;
        player.Say("Keine Lust einen Teppich mit mir rum zu tragen.");
      } else player.Say("Da ist nichts drunter. Ich habe ihn selbst dort hingelegt.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Einen Teppich kann man nicht öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Einen Teppich kann man nicht schließen.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      if (oTeppich.X == 215) player.Say("Ich kann fühlen, dass sich etwas unter dem Teppich befindet.");
      else player.Say("Da ist nichts drunter. Ich habe ihn selbst dort hingelegt.");
    }
    else Unhandled();
  }
}
