// Eingangsflur (Kevins Haus)
bool b_HaustuerAbgeschlossen	= true;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  //aMusic6.Play();
	Door[eDoorNumHaustuer].Init(oTuer, hHaustuer);
  
  if (player.PreviousRoom == 15) aMusic13.Play();
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hHaustuer_AnyClick()
{	
  if (any_click_move(50, 132, eDirectionLeft))
	{
    //if ( Door[gr_Haustuer].Click() == 0 ) Unhandled();
    if ( Door[eDoorNumHaustuer].ClickSpecial(2, 3, iSchluesselGelb, 2) == 0 )
      Unhandled();
  } 
   
	/*
	if ( any_click_move(Door[gr_Haustuer].i_XPosition, Door[gr_Haustuer].i_YPosition, Door[gr_Haustuer].l_Direction) )
	{
		if ( UsedAction(eActUseInventory) )
		{
			if ( b_HaustuerAbgeschlossen && player.ActiveInventory == iSchluesselGelb )
			{
				b_HaustuerAbgeschlossen = false;
				player.Say("Die Haustür ist jetzt aufgeschlossen.");
			}
			else if ( !b_HaustuerAbgeschlossen && player.ActiveInventory == iSchluesselGelb )
			{
				b_HaustuerAbgeschlossen = true;
				player.Say("Die Haustür ist jetzt abgeschlossen.");
			}
			else if ( b_HaustuerAbgeschlossen )
			{
				player.Say("Die ist abgeschlossen.");
			}
		}
		else
		if ( !b_HaustuerAbgeschlossen )
		{
			if ( Door[gr_Haustuer].Click() == 0 )  Unhandled();
		}
		else
		{
			player.Say("Die ist abgeschlossen.");
		}
	}  	*/
  
}

function hHaustuer_Mode8()
{
  if (any_click_move(50, 132, eDirectionLeft))
 	{
    if (UsedAction(eActClose))
    {
      if (oTuer.Visible==false)
        player.Say("Das ist schon zu.");
    }
  }
}

function hDurchgang_AnyClick()
{
	if (any_click_move(320, 80, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
			SetNextScreenTransition(eTransitionCrossfade);
      player.ChangeRoom(11, 240, 90, eDirectionDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Durchgang zum Flur.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der lässt sich nicht transportieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sollte einfach darauf zulaufen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht durchwerfen.");
		}
		else Unhandled();
	}
}

/****************************
*   Hotspot-Funktionen
****************************/
function hSchluesselhaken_AnyClick()
{
	if (any_click_move(85, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da hänge ich meine Schlüssel auf.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der hängt da genau richtig.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Mit welchen Schlüssel?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ergibt keinen Sinn.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Den kann ich nicht noch weiter in die Wand drücken.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iZimmerschluessel )
			{
				oSchluessel.Visible = true;
				player.LoseInventory(iZimmerschluessel);
			}
			else if ( player.ActiveInventory == iSchluesselGelb )
			{
				player.Say("Den behalte ich lieber bei mir. Für den Fall, dass ich mich aussperre.");
			}
      else if (player.ActiveInventory == iHaustuerKey || player.ActiveInventory == iCandleKey)
      {
        player.Say("Ich hänge keine fremden Schlüssel bei mir auf.");
      }
      else player.Say("Das ist kein Schlüssel.");
		}
		else Unhandled();
	}
}

function hKleiderhaken_AnyClick()
{
	if (any_click_move(244, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Kleiderhaken für meine Kleidung.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und womit?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hänge ich nicht da ran.");
		}
		else Unhandled();
	}
}

function hSteckdose_AnyClick()
{
	if (any_click_move(347, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kann man elektronische Geräte dran anschließen.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann hängen die Kabel heraus und ich könnte mir einen elektrischen Schlag holen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche es nicht nachprüfen.");
			player.Say("DA ist Saft drauf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Eine Steckdose kann man nicht schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Und sie aus der Wand reißen?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die sitzt fest.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir nichts.");
		}
		else Unhandled();
	}
}

function hAbstellbaenke_AnyClick()
{
	if (any_click_move(150, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Abstellbänke.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die will ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die würden unter meinem Gewicht zusammenbrechen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da drauf legen.");
		}
		else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
****************************/
function oSchluessel_AnyClick()
{
	if (any_click_move(85, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Schlüssel für mein Schlafzimmer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oSchluessel.Visible = false;
			PlaySound(4);
			player.AddInventory(iZimmerschluessel);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und womit?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else Unhandled();
	}
}

function oHaustuerschluessel_AnyClick()
{
	if (any_click_move(85, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Schlüssel für mein Schlafzimmer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			oHaustuerschluessel.Visible = false;
			PlaySound(4);
			player.AddInventory(iSchluesselGelb);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und womit?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/

