// Computerraum (Kevins Haus)

enum e_WhichSystem
{
	eUseLinux, 
	eUseWindows, 
	eUseSystem, 
	eUseStd
};

e_WhichSystem l_WhichSystem;


/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oMonitor.Clickable = false;
	oMonitor.SetView(58);
	oMonitor.Animate(0, 0, eRepeat, eNoBlock);
	
	l_WhichSystem = eUseLinux;
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hDurchgang_AnyClick()
{
	if (any_click_move(190, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
			SetNextScreenTransition(eTransitionCrossfade);
			player.ChangeRoom(7, 120, 132);
			player.FaceDirection(eDirDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach nebenan.");
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
int oSchublade(int l_XPos, int l_YPos, Object *o_Schublade, String s_MessageLook)
{
	if (any_click_move(l_XPos, l_YPos, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say(s_MessageLook);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche diese Schublade nicht");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie soll ich dass?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist doch schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			o_Schublade.Visible = false;
			PlaySound(1);
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchubladeLLU2_AnyClick()
{
	return oSchublade(90, 130, oSchubladeLLU2, "Leer.");
}

function oSchubladeLLU1_AnyClick()
{
	return oSchublade(90, 130, oSchubladeLLU1, "Leer.");
}

function oSchubladeLLO2_AnyClick()
{
	return oSchublade(90, 130, oSchubladeLLO2, "Leer.");
}

function oSchubladeLLO1_AnyClick()
{
	return oSchublade(90, 130, oSchubladeLLO1, "Leer.");
}

function oSchubladeLRU2_AnyClick()
{
	return oSchublade(130, 130, oSchubladeLRU2, "Leer.");
}

function oSchubladeLRU1_AnyClick()
{
	return oSchublade(130, 130, oSchubladeLRU1, "Leer.");
}

function oSchubladeLRO2_AnyClick()
{
	return oSchublade(130, 130, oSchubladeLRO2, "Leer.");
}

function oSchubladeLRO1_AnyClick()
{
	return oSchublade(130, 130, oSchubladeLRO1, "Leer.");
}

function oSchubladeRL_AnyClick()
{
	return oSchublade(260, 130, oSchubladeRL, "Leer.");
}

function oSchubladeRR_AnyClick()
{
	return oSchublade(320, 130, oSchubladeRR, "Leer.");
}

function oTuerchenL_AnyClick()
{
	return oSchublade(260, 130, oTuerchenL, "Leer.");
}

function oTuerchenR_AnyClick()
{
	return oSchublade(320, 130, oTuerchenR, "Leer.");
}


/****************************
*   Hotspot-Funktionen
****************************/
function hComputer_AnyClick()
{
	if (any_click_move(90, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Computer. Selbst zusammen geschraubt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer um ihn sinnlos mitzunehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( l_WhichSystem == eUseLinux )
			{
				player.Say("Da ist Linox drauf.");
				player.Say("Ich habe im Moment keine Lust.");
			}
			else if ( l_WhichSystem == eUseWindows )
			{
				player.Say("Da ist ein Fenster-OS drauf.");
				player.Say("Vielleicht später.");
			}
			else
			{
				player.Say("Da ist momentan nichts installiert.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist nicht defekt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits verschraubt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da drunter ist kein Staub.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else Unhandled();
	}
}

function hPoster01_AnyClick()
{
	if (any_click_move(140, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hab ich bei ebay ersteigert.");
			player.Say("Der Seller hieß 'R-Gilb'.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lass es wo es ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das teuer ersteigerte Poster?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Poster verweigert mir die Zusammenarbeit.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("OK, ich drücke die Haftis nochmals an die Wand.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Poster bleibt an der Wnad. Ich ziehe nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Und riskieren, dass es beschädigt wird?");
		}
		else Unhandled();
	}
}

function hC32_AnyClick()
{
	if (any_click_move(265, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein alter C32.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Bist du verrückt? Ich bin froh dass er noch läuft, so wie der ausschaut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, das würde zu lange dauern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist nicht defekt und muss deshalb auch nicht geöffnet werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der wird nie verschoben.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein, damit nicht.");
		}
		else Unhandled();
	}
}

function hPoster02_AnyClick()
{
	if (any_click_move(40, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Ex-Kollege hat die Buchvorlage geschrieben.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da hängt es doch gut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lässt das Poster nicht zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ein Poster schließen?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(355, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schöne Aussicht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Fenster sind im Allgemeinen mit dem Mauerwerk verbunden.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Es ist bereits eine gute Luft hier herinnen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nein, ich könnte rausfallen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Fenster ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bleibt zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt mir gar nichts.");
		}
		else Unhandled();
	}
}

int hSchublade(int l_XPos, int l_YPos, Object *o_Schublade)
{
		if (any_click_move(l_XPos, l_YPos, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich will sie nicht mit mir herrumtragen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			o_Schublade.Visible = true;
			PlaySound(1);
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann sie nicht weiter rein drücken.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hSchubladeLR01_AnyClick()
{
	return hSchublade(130, 130, oSchubladeLRO1);
}

function hSchubladeLR02_AnyClick()
{
	return hSchublade(130, 130, oSchubladeLRO2);
}

function hSchubladeLR03_AnyClick()
{
	return hSchublade(130, 130, oSchubladeLRU1);
}

function hSchubladeLR04_AnyClick()
{
	return hSchublade(130, 130, oSchubladeLRU2);
}

function hSchubladeLL01_AnyClick()
{
	return hSchublade(90, 130, oSchubladeLLO1);
}

function hSchubladeLL02_AnyClick()
{
	return hSchublade(90, 130, oSchubladeLLO2);
}

function hSchubladeLL03_AnyClick()
{
	return hSchublade(90, 130, oSchubladeLLU1);
}

function hSchubladeLL04_AnyClick()
{
	return hSchublade(90, 130, oSchubladeLLU2);
}

function hSchubladeRL01_AnyClick()
{
	return hSchublade(260, 130, oSchubladeRL);
}

function hSchubladeRR01_AnyClick()
{
	return hSchublade(320, 130, oSchubladeRR);
}

function hSchraenkchenL_AnyClick()
{
	if (any_click_move(260, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist ein Schrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre sinnvoller.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oTuerchenL.Visible = true;
			PlaySound(2);
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ist doch schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hSchraenkchenR_AnyClick()
{
	if (any_click_move(320, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist ein Schrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre sinnvoller.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oTuerchenR.Visible = true;
			PlaySound(2);
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ist doch schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
