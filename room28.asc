// Wohnzimmer

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerWohnzimmer].Init(oTuer01, hTuer01);
  
  oSitzkissenL.Clickable = false;
  oSitzkissenR.Clickable = false;
  
  if (tuerknaufGlobal < 3)
  {
    SetBackgroundFrame(1);
  } else SetBackgroundFrame(0);
}

function room_FirstLoad()
{
  //tuerknaufGlobal = 1; // Kevin sieht den fehlenden Knauf.
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if (GetBackgroundFrame() == 0) // Türknauf ist wieder dran.
  {
    if (any_click_move(40, 130, eDirectionLeft))
    {
      if(Door[eTuerWohnzimmer].Click()==0)
        Unhandled();
    }  
  }
  else // Türknauf fehlt.
  {
    if (any_click_move(40, 130, eDirectionLeft))
    {
      if (UsedAction(eActLookAt))
      {
        Wait(5);
        player.Say("An der Tür fehlt der Türknauf.");
      }
      else if (UsedAction(eActUse))
      {
        Wait(5);
        player.Say("Ich muss sie schon öffnen.");
      }
      else if (UsedAction(eActPickUp))
      {
        Wait(5);
        player.Say("Schon mal eine Tür aus ihren Angeln gerissen?");
      }
      else if (UsedAction(eActOpen))
      {
        Wait(5);
        player.Say("Würde ich ja gerne, aber der Türknauf fehlt.");
      }
      else if (UsedAction(eActClose))
      {
        Wait(5);
        player.Say("Die ist bereits zu.");
      }
      else if (UsedAction(eActPull) || UsedAction(eActPush))
      {
        Wait(5);
        player.Say("Da bewegt sich nichts.");
      }
      else if (UsedAction(eActUseInventory))
      {
        Wait(5);
        if (player.ActiveInventory == iTuerknauf || player.ActiveInventory == iSchraubenzieher)
        {
          if (player.HasInventory(iTuerknauf))
          {
            aSound61.Play();
            Wait(5);
            aSound62.Play();
            Wait(10);
            aSound63.Play();
            Wait(20);
            SetBackgroundFrame(0);
            player.LoseInventory(iTuerknauf);
            tuerknaufGlobal++;
          } else player.Say("Ohne Türknauf bringt mich der Schraubenzieher auch nicht weiter.");
        } else player.Say("Das bringt mich im Fall \"Fehlender Türknauf\" auch nicht weiter.");
      }
      else Unhandled();
    }
  }
}

/****************************
*   Hotspot-Funktionen
****************************/

function hFlur_AnyClick()
{
  if (any_click_move(250, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(29, 88, 130);
      player.FaceDirection(eDirectionDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es zum Flur.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(29, 88, 130);
      player.FaceDirection(eDirectionDown);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es ist auf.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFernseher_AnyClick()
{
  if (any_click_move(160, 125, eDirectionDown))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dieser antike Fernseher soll noch funzen?");
      player.Say("Mann, Bernard sollte sich einen neuen kaufen."); 
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin nicht hergekommen um fernzusehen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Elektronik ist nicht mein Spezialgebiet.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Er ist schon geschlossen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verrücken.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verrücken.");
		}
		else if (UsedAction(eActUseInventory))
		{
      Wait(5);
      if (player.ActiveInventory == iFernbedienung)
      {/*
        PlaySound(93);
        gAction.Visible = false;
        gMaingui.Visible = false;  
        gBorder.Visible = false;
        aMusic6.Stop();
        player.ChangeRoom(2);*/
        player.Say("Meine Fernbedienung funktioniert bei einem fremden Fernseher nicht.");
      } else player.Say("Damit geht der Fernseher nicht an.");
		}
		else Unhandled();
  }
}

function hBild01_AnyClick()
{
  if (any_click_move(135, 135, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Bild von einer wunderschönen Karibikinsel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich möchte das Bild nicht klauen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich will es nicht übermalen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Da ist sicher kein Tresor hinter.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Da ist nichts zum schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse es da hängen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lasse es da hängen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit würde ich das Bild beschädigen.");
		}
		else Unhandled();
  }
}

function hSofa_AnyClick()
{
  if (any_click_move(135, 135, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("So eines hatte ich mal in blau.");
      player.Say("Habe es aber verkauft und mir stattdessen zwei Sessel gekauft.");
      Wait(10);
      player.Say("Und spätestens jetzt hätte ich ein Problem gehabt. Das Sofa hätte ich nie auf den Speicher rauf gekriegt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte mich jetzt nicht ausruhen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Vergiss es.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da ablegen.");
		}
		else Unhandled();
  }
}

function hFoto_AnyClick()
{
  if (any_click_move(285, 125, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das wird wohl Bernards Schwester sein.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich will es nicht übermalen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Da ist nichts zum schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse es da hängen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lasse es da hängen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit würde ich das Foto beschädigen.");
		}
		else Unhandled();
  }
}

function hVase_AnyClick()
{
  if (any_click_move(285, 125, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Porzellan.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich habe gerade keine Blume zur Hand.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Da ist nichts zum schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse sie da stehen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich will sie nicht kaputt drücken");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit würde ich die Vase beschädigen.");
		}
		else Unhandled();
  }
}

function hTisch_AnyClick()
{
  if (any_click_move(285, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein kleiner Tisch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt hier.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Da steht schon was drauf.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Ich lasse den da stehen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich lasse den da stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich da nicht benutzen.");
		}
		else Unhandled();
  }
}

function hFenster_AnyClick()
{
  if (any_click_move(305, 125, eDirectionRight))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wow! Ich sehe gerade wie ... ");
      Wait(20);
			player.Say("Ach, schon gut.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht raus klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hSteckdose_AnyClick()
{
  if (any_click_move(215, 120, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine 110 Volt-Steckdose.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es tut sich nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da passiert auch nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt auch so gut in eine Steckdose.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
***********************/

function oFernbedienung_AnyClick()
{
  if (any_click_move(70, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Fernbedienung des Fernsehers.");
      Wait(10);
			player.FaceDirection(eDirectionDown);
      Wait(10);
			player.Say("Eines der wenigen elektronischen Geräte ... ");
      Wait(10);
			player.Say(" ... die selbst Britney bedienen kann.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      oFernbedienung.Visible = false;
      Wait(5);
			aSound4.Play();
      Wait(5);
      player.AddInventory(iFernbedienung);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sollte sie nehmen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es tut sich nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da passiert auch nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
		else Unhandled();
  }
}

function oSitzkissenL_AnyClick()
{
  if (any_click_move(135, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Gemütlich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      oSitzkissenL.Visible = false;
      Wait(5);
			aSound4.Play();
      Wait(5);
      //player.AddInventory(iSitzkissenL);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte mich nicht setzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich will es nicht kaputt machen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es tut sich nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da passiert auch nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
		else Unhandled();
  }
}

function oSitzkissenR_AnyClick()
{
  if (any_click_move(135, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Gemütlich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
      oSitzkissenR.Visible = false;
      Wait(5);
			aSound4.Play();
      Wait(5);
      //player.AddInventory(iSitzkissenR);
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte mich nicht setzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich will es nicht kaputt machen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es tut sich nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Da passiert auch nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
		else Unhandled();
  }
}

function oVentilator_AnyClick()
{
  if (any_click_move(50, 127, eDirectionUp))
  {
    if (UsedAction (eActLookAt))
    {
      Wait(5);
      player.Say("Ein Ventilator.");
    }
    else if (UsedAction (eActUse))
    {
      Wait(5);
      player.Say("Hier drinnen ist es kühl genug.");
    }
    else if (UsedAction (eActPickUp))
    {
      Wait(5);
      player.Say("Dafür ist er zu groß.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Warum sollte ich ihn woanders hinzustellen?");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Das ergibt wenig Sinn.");
    }
    else Unhandled ();
  }
}

function oPoster_AnyClick()
{
  if (any_click_move(116, 126, eDirectionUp))
  {
    if (UsedAction (eActLookAt))
    {
      Wait(5);
      player.Say("'Miss Mummy'.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Nein danke, ich stehe auf lebende Frauen.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Das Poster möchte ich nicht haben.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Dahinter ist kein Safe.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Ein Poster zu schließen ergibt keinen Sinn.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Ich kann an dem ganzen Poster rumdrücken, aber es tut sich nichts.");
    }
    else Unhandled ();
  }
}

function oPhonoschrank_AnyClick()
{
  if (any_click_move(288, 120, eDirectionRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Phonoschrank.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Ich möchte jetzt keine Musik hören.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Der ist zu groß zum mitnehmen.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Besser nicht, sonst schmeiße ich ihn noch um.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Das bringt mich auch nicht weiter.");
    }
    else Unhandled ();
  }
}
